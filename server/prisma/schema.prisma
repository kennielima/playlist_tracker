// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String     @id @default(uuid())
  email               String     @unique
  name                String?
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  playlists           Playlist[]
  spotifyId           String?    @unique
  spotifyaccessToken  String?
  spotifyrefreshToken String?
  tokenExpiry         Int?
  userImage           String?

  @@map("Users")
}

model Playlist {
  id          String     @id @default(uuid())
  name        String
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  tracks      Track[]
  Snapshot    Snapshot[]
  isTracked   Boolean    @default(false)
  User        User?      @relation(fields: [userId], references: [id])
  userId      String?
  image       String
  url         String
  playlistId  String     @unique
  snapshotId  String

  @@map("Playlists")
}

model Snapshot {
  id         String   @id @default(uuid())
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  playlistId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  tracks     Track[]

  @@map("Snapshot")
}

model Track {
  id         String    @id @default(uuid())
  artist     String
  name       String
  album      String?
  imageUrl   String?
  rank       Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Playlist   Playlist  @relation(fields: [playlistId], references: [id])
  playlistId String
  Snapshot   Snapshot? @relation(fields: [snapshotId], references: [id])
  snapshotId String?

  @@map("Tracks")
}

//enum charts source
