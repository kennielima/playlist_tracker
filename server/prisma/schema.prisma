// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String     @id @default(uuid())
  email               String     @unique
  name                String?
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  playlists           Playlist[]
  spotifyId           String?    @unique
  spotifyaccessToken  String?
  spotifyrefreshToken String?
  tokenExpiry         Int?
  userImage           String?

  @@map("Users")
}

model Playlist {
  id             String         @id @default(uuid())
  name           String
  slug           String         @unique
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  tracks         Track[]
  SnapshotDates  SnapshotDate[]
  User           User?          @relation(fields: [userId], references: [id])
  chartCountry   ChartCountry?  @relation(fields: [chartCountryId], references: [id])
  chartCountryId String?
  userId         String?

  @@map("Playlists")
}

model Track {
  id         String   @id @default(uuid())
  name       String
  slug       String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Playlist   Playlist @relation(fields: [playlistId], references: [id])
  playlistId String
  title      String
  artist     String
  album      String
  imageUrl   String?
  rank       Int

  @@map("Tracks")
}

model SnapshotDate {
  id         String   @id @default(uuid())
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  playlistId String
  date       DateTime
  month      Int
  year       Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("SnapshotDates")
}

model ChartCountry {
  id        String     @id @default(uuid())
  name      String
  slug      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  playlist  Playlist[]

  @@map("ChartCountries")
}

//enum charts source
